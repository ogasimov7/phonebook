pipeline {
    agent any

    environment {
		DOCKERHUB_CREDENTIALS=credentials('dockerhub')
	}
    
    stages {
        stage("Git checkout") {
            steps {
                deleteDir()
                git branch: 'master',
                    url   : 'https://github.com/ogasimov7/phonebook.git'
                checkout([$class: 'GitSCM',
                          branches: [[name: '*/master']],
                          extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'phonebook']],
                          userRemoteConfigs: [[credentialsId: 'github', url: 'git@github.com:ogasimov7/phonebook.git']]
                          ])
            }
        }
        stage('Test') {
            steps {
                echo 'Testing...'
                sh 'npm test'
            }
        }
        stage("SonarQube analysis") {
            steps {
                script {
                    withSonarQubeEnv('SonarQube Server') {
                        sh '''
                        ${JENKINS_HOME}/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarQube_Scanner/bin/sonar-scanner \
                        -Dsonar.host.url=http://localhost:9000 \
                        -Dsonar.login=f6223a4a77adb6e7bb039893dcbef5f3a7cfb8d1 \
                        -Dsonar.projectKey=password \
                        -Dsonar.projectName=phonebook
                        '''
                    }
                }
            }
        }         
        stage('Build docker image') {
            steps {
                sh "docker build --file frontend/Dockerfile -t localhost:8080/frontend:v$BUILD_NUMBER frontend/"
            }
        }
        stage('Push docker image to registry') {
            steps {
                sh "docker push localhost:8080/frontend:v$BUILD_NUMBER"
            }
        }
        stage('Update deployment image') {
            steps {
                sh 'sed -i "s/image: localhost:8080\\/frontend:v1.0.0/image: localhost:8080\\/frontend:v$BUILD_NUMBER/g"
                kubernet/frontend/deployment.yml'
                sh 'cat ../kubernet/frontend/deployment.yml'
            }
        }
        stage('Update app in k8s') {
            steps {
                sh "kubectl apply -f ../kubernet/frontend/"
            }
        }
    }
    

}